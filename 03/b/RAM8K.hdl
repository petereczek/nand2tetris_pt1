// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8K {
    IN in[16], load, address[13];
    OUT out[16];

    PARTS:
    DMux(in=load, sel=address[0], a=sel0, b=sel1);
    RAM4K(in=in, load=sel0, address=address[1..12], out=out0);
    RAM4K(in=in, load=sel1, address=address[1..12], out=out1);
    Mux16(a=out0, b=out1, sel=address[0], out=out);
    // Put your code here:
}
